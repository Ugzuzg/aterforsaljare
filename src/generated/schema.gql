# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DealershipCount {
  bookings: Int!
}

type Dealership {
  id: ID!
  title: String!
  capacity: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  bookings: [Booking!]
  _count: DealershipCount
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CustomerCount {
  bookings: Int!
}

type Customer {
  id: ID!
  email: String!
  phoneNumber: String!
  bookings: [Booking!]
  _count: CustomerCount
}

type VehicleCount {
  bookings: Int!
}

type Vehicle {
  vin: ID!
  model: String!
  make: String!
  bookings: [Booking!]
  _count: VehicleCount
}

type Booking {
  id: ID!
  dealership: Dealership!
  dealershipId: String!
  customer: Customer!
  customerId: String!
  vehicle: Vehicle!
  vehicleVin: String!
  time: DateTime!
}

type Query {
  findBookings(bookingWhereInput: BookingWhereInput): [Booking!]!
}

input BookingWhereInput {
  AND: [BookingWhereInput!]
  OR: [BookingWhereInput!]
  NOT: [BookingWhereInput!]
  id: StringFilter
  dealership: DealershipRelationFilter
  dealershipId: StringFilter
  customer: CustomerRelationFilter
  customerId: StringFilter
  vehicle: VehicleRelationFilter
  vehicleVin: StringFilter
  time: DateTimeFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DealershipRelationFilter {
  is: DealershipWhereInput
  isNot: DealershipWhereInput
}

input DealershipWhereInput {
  AND: [DealershipWhereInput!]
  OR: [DealershipWhereInput!]
  NOT: [DealershipWhereInput!]
  id: StringFilter
  title: StringFilter
  capacity: IntFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  bookings: BookingListRelationFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input BookingListRelationFilter {
  every: BookingWhereInput
  some: BookingWhereInput
  none: BookingWhereInput
}

input CustomerRelationFilter {
  is: CustomerWhereInput
  isNot: CustomerWhereInput
}

input CustomerWhereInput {
  AND: [CustomerWhereInput!]
  OR: [CustomerWhereInput!]
  NOT: [CustomerWhereInput!]
  id: StringFilter
  email: StringFilter
  phoneNumber: StringFilter
  bookings: BookingListRelationFilter
}

input VehicleRelationFilter {
  is: VehicleWhereInput
  isNot: VehicleWhereInput
}

input VehicleWhereInput {
  AND: [VehicleWhereInput!]
  OR: [VehicleWhereInput!]
  NOT: [VehicleWhereInput!]
  vin: StringFilter
  model: StringFilter
  make: StringFilter
  bookings: BookingListRelationFilter
}

type Mutation {
  createBooking(bookingCreateInput: BookingCreateWithoutDealershipInput!): Booking!
  updateDealership(dealershipUpdateInput: DealershipUpdateInput!): Dealership!
}

input BookingCreateWithoutDealershipInput {
  id: String
  time: DateTime!
  customer: CustomerCreateNestedOneWithoutBookingsInput!
  vehicle: VehicleCreateNestedOneWithoutBookingsInput!
}

input CustomerCreateNestedOneWithoutBookingsInput {
  create: CustomerCreateWithoutBookingsInput
  connectOrCreate: CustomerCreateOrConnectWithoutBookingsInput
  connect: CustomerWhereUniqueInput
}

input CustomerCreateWithoutBookingsInput {
  id: String
  email: String!
  phoneNumber: String!
}

input CustomerCreateOrConnectWithoutBookingsInput {
  where: CustomerWhereUniqueInput!
  create: CustomerCreateWithoutBookingsInput!
}

input CustomerWhereUniqueInput {
  id: String
  email: String
}

input VehicleCreateNestedOneWithoutBookingsInput {
  create: VehicleCreateWithoutBookingsInput
  connectOrCreate: VehicleCreateOrConnectWithoutBookingsInput
  connect: VehicleWhereUniqueInput
}

input VehicleCreateWithoutBookingsInput {
  vin: String!
  model: String!
  make: String!
}

input VehicleCreateOrConnectWithoutBookingsInput {
  where: VehicleWhereUniqueInput!
  create: VehicleCreateWithoutBookingsInput!
}

input VehicleWhereUniqueInput {
  vin: String
}

input DealershipUpdateInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  capacity: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  bookings: BookingUpdateManyWithoutDealershipInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input BookingUpdateManyWithoutDealershipInput {
  create: [BookingCreateWithoutDealershipInput!]
  connectOrCreate: [BookingCreateOrConnectWithoutDealershipInput!]
  upsert: [BookingUpsertWithWhereUniqueWithoutDealershipInput!]
  createMany: BookingCreateManyDealershipInputEnvelope
  connect: [BookingWhereUniqueInput!]
  set: [BookingWhereUniqueInput!]
  disconnect: [BookingWhereUniqueInput!]
  delete: [BookingWhereUniqueInput!]
  update: [BookingUpdateWithWhereUniqueWithoutDealershipInput!]
  updateMany: [BookingUpdateManyWithWhereWithoutDealershipInput!]
  deleteMany: [BookingScalarWhereInput!]
}

input BookingCreateOrConnectWithoutDealershipInput {
  where: BookingWhereUniqueInput!
  create: BookingCreateWithoutDealershipInput!
}

input BookingWhereUniqueInput {
  id: String
}

input BookingUpsertWithWhereUniqueWithoutDealershipInput {
  where: BookingWhereUniqueInput!
  update: BookingUpdateWithoutDealershipInput!
  create: BookingCreateWithoutDealershipInput!
}

input BookingUpdateWithoutDealershipInput {
  id: StringFieldUpdateOperationsInput
  time: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneRequiredWithoutBookingsInput
  vehicle: VehicleUpdateOneRequiredWithoutBookingsInput
}

input CustomerUpdateOneRequiredWithoutBookingsInput {
  create: CustomerCreateWithoutBookingsInput
  connectOrCreate: CustomerCreateOrConnectWithoutBookingsInput
  upsert: CustomerUpsertWithoutBookingsInput
  connect: CustomerWhereUniqueInput
  update: CustomerUpdateWithoutBookingsInput
}

input CustomerUpsertWithoutBookingsInput {
  update: CustomerUpdateWithoutBookingsInput!
  create: CustomerCreateWithoutBookingsInput!
}

input CustomerUpdateWithoutBookingsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  phoneNumber: StringFieldUpdateOperationsInput
}

input VehicleUpdateOneRequiredWithoutBookingsInput {
  create: VehicleCreateWithoutBookingsInput
  connectOrCreate: VehicleCreateOrConnectWithoutBookingsInput
  upsert: VehicleUpsertWithoutBookingsInput
  connect: VehicleWhereUniqueInput
  update: VehicleUpdateWithoutBookingsInput
}

input VehicleUpsertWithoutBookingsInput {
  update: VehicleUpdateWithoutBookingsInput!
  create: VehicleCreateWithoutBookingsInput!
}

input VehicleUpdateWithoutBookingsInput {
  vin: StringFieldUpdateOperationsInput
  model: StringFieldUpdateOperationsInput
  make: StringFieldUpdateOperationsInput
}

input BookingCreateManyDealershipInputEnvelope {
  data: [BookingCreateManyDealershipInput!]!
  skipDuplicates: Boolean
}

input BookingCreateManyDealershipInput {
  id: String
  customerId: String!
  vehicleVin: String!
  time: DateTime!
}

input BookingUpdateWithWhereUniqueWithoutDealershipInput {
  where: BookingWhereUniqueInput!
  data: BookingUpdateWithoutDealershipInput!
}

input BookingUpdateManyWithWhereWithoutDealershipInput {
  where: BookingScalarWhereInput!
  data: BookingUpdateManyMutationInput!
}

input BookingScalarWhereInput {
  AND: [BookingScalarWhereInput!]
  OR: [BookingScalarWhereInput!]
  NOT: [BookingScalarWhereInput!]
  id: StringFilter
  dealershipId: StringFilter
  customerId: StringFilter
  vehicleVin: StringFilter
  time: DateTimeFilter
}

input BookingUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  time: DateTimeFieldUpdateOperationsInput
}
